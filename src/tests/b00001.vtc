varnishtest "Test various lookups"

server s1 {
	rxreq
	txresp
} -start

shell "cp ${vmod_topbuild}/maxmind-db/test-data/*.mmdb ${tmpdir}"

varnish v1 -vcl+backend {
	import geoip2 from "${vmod_topbuild}/src/.libs/libvmod_geoip2.so";
	import std;

	sub vcl_init {
		new db1 = geoip2.geoip2(
		    "${tmpdir}/GeoIP2-City-Test.mmdb");
		new db2 = geoip2.geoip2(
		    "${tmpdir}/GeoIP2-Connection-Type-Test.mmdb");
		new db3 = geoip2.geoip2(
		    "${tmpdir}/GeoIP2-ISP-Test.mmdb");
	}

	sub vcl_deliver {
		set resp.http.x-city = db1.lookup(
		    "city/names/en",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-country = db1.lookup(
		    "country/names/en",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-country-id = db1.lookup(
		    "registered_country/geoname_id",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-country-iso = db1.lookup(
		    "country/iso_code",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-continent = db1.lookup(
		    "continent/names/en",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-latitude = db1.lookup(
		    "location/latitude",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-longitude = db1.lookup(
		    "location/longitude",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-timezone = db1.lookup(
		    "location/time_zone",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-subdivision0 = db1.lookup(
		    "subdivisions/0/names/en",
		    std.ip("81.2.69.192", "0.0.0.0"));
		set resp.http.x-connection-type = db2.lookup(
		    "connection_type",
		    std.ip("1.0.128.1", "0.0.0.0"));
		set resp.http.x-isp = db3.lookup(
		    "isp",
		    std.ip("1.0.128.1", "0.0.0.0"));
	}
} -start

client c1 {
	txreq
	rxresp
	expect resp.http.x-city == "London"
	expect resp.http.x-continent == "Europe"
	expect resp.http.x-country == "United Kingdom"
	expect resp.http.x-country-id == "6252001"
	expect resp.http.x-country-iso == "GB"
	expect resp.http.x-latitude == "51.514200"
	expect resp.http.x-longitude == "-0.093100"
	expect resp.http.x-timezone == "Europe/London"
	expect resp.http.x-subdivision0 == "England"
	expect resp.http.x-connection-type == "Dialup"
	expect resp.http.x-isp == "TOT Public Company Limited"
} -run
